Agenda:

1. Recap
node.js
visual studio code
npx create-react-app <app name>
npx create-react-app reactbasics
cd react basics
npm start

App.js - root component - parent
child components are added in App.js
embed java script inside html jsx - {}
array of objects , displayed data in table
events - onclick,onchange,useState

2. Assignment
3. Hooks - useState,useEffect,useContext
4. Properties - Dataflow - one way data flow from parent to child
5. Integration with backend using ajax - fetch api,axios - API - Restful web services - fake api

jsonplaceholder.typicode.com


Asynchronous Java Script and XML 

update part of the screen

Synchronous - Request - Response - java,php,
Asynchronous - non blocking

Restaurant

waiter


Json placeholder typecode

url - https://jsonplaceholder.typicode.com/todos
web service end point

http get -https://jsonplaceholder.typicode.com/todos
gets list of todos

http get - single todo - https://jsonplaceholder.typicode.com/todos/1

http post - https://jsonplaceholder.typicode.com/todos

postman

api - api.amazon.co.in/user

promise - resolve,reject - url

resolve - success - then ]



Recap:
Hooks
useState
useEffect
fetch api - integration of restful web services
css


Properties

parent to child - data flow

<img src="mern.png" width=100 height =100></img>
<user data={userdata}/>
<user data={userdata}></user>
property
functionality
addUser

<user data={userdata} add={addUser}></user>

const User =(property)=>{
let userdata = property.data
}















6. Routing